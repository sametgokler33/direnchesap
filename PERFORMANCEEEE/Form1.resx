<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>